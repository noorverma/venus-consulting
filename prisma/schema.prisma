generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String               @id @default(cuid())
  name                String?
  email               String?              @unique
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  appointments        Appointment[]
  JobApplication      JobApplication[]
  marketplaceListings MarketplaceListing[] @relation("UserListings")
  sentMessages        MarketplaceMessage[] @relation("UserSender")
}

model Appointment {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String
  reason    String
  date      DateTime
  time      String
  userId    String?
  createdAt DateTime @default(now())
  status    String   @default("Pending")
  user      User?    @relation(fields: [userId], references: [id])
}

model JobPosting {
  id              Int              @id @default(autoincrement())
  title           String
  description     String
  location        String
  salary          String
  requirements    String
  createdAt       DateTime         @default(now())
  jobApplications JobApplication[]
}

model JobApplication {
  id           Int        @id @default(autoincrement())
  name         String
  email        String
  resume       String
  jobPostingId Int
  userId       String?
  createdAt    DateTime   @default(now())
  jobPosting   JobPosting @relation(fields: [jobPostingId], references: [id])
  user         User?      @relation(fields: [userId], references: [id])
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String
  price       Float
  image       String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model MarketplaceListing {
  id          Int                  @id @default(autoincrement())
  title       String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime             @default(now())
  sellerId    String?
  seller      User?                @relation("UserListings", fields: [sellerId], references: [id])
  messages    MarketplaceMessage[] @relation("ListingMessages") // Added relation field
}

model MarketplaceMessage {
  id        Int                @id @default(autoincrement())
  content   String
  timestamp DateTime           @default(now())
  senderId  String
  listingId Int
  listing   MarketplaceListing @relation("ListingMessages", fields: [listingId], references: [id])
  sender    User               @relation("UserSender", fields: [senderId], references: [id])
}
